app TripPlanner {
  wasp: {
    version: "^0.11.1"
  },
  title: "TripPlanner",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id                Int    @id @default(autoincrement())
    name              String
    email             String @unique
    profilePicture    String
    travelPreferences String
    pastTrips         Trip[]
psl=}

entity Trip {=psl
    id          Int         @id @default(autoincrement())
    userId      Int
    destination String
    travelDates String
    budget      Float
    itinerary   Itinerary[]
    weather     Weather[]
    localInfo   LocalInfo[]
    User        User        @relation(fields: [userId], references: [id])
psl=}

entity Itinerary {=psl
    id             Int    @id @default(autoincrement())
    tripId         Int
    activities     String
    customizations String
    Trip           Trip   @relation(fields: [tripId], references: [id])
psl=}

entity Activity {=psl
    id          Int    @id @default(autoincrement())
    name        String
    description String
    images      String
    reviews     String
    location    String
psl=}

entity Weather {=psl
    id          Int    @id @default(autoincrement())
    tripId      Int
    weatherInfo String
    Trip        Trip   @relation(fields: [tripId], references: [id])
psl=}

entity LocalInfo {=psl
    id                Int    @id @default(autoincrement())
    tripId            Int
    restaurants       String
    transportOptions  String
    emergencyServices String
    Trip              Trip   @relation(fields: [tripId], references: [id])
psl=}

action createTrip {
  fn: import { createTrip } from "@server/actions.js",
  entities: [Trip]
}

action updateItinerary {
  fn: import { updateItinerary } from "@server/actions.js",
  entities: [Itinerary]
}

action uploadActivityImage {
  fn: import { uploadActivityImage } from "@server/actions.js",
  entities: [Activity]
}

query getTrips {
  fn: import { getTrips } from "@server/queries.js",
  entities: [User, Trip]
}

query getItinerary {
  fn: import { getItinerary } from "@server/queries.js",
  entities: [Trip]
}

query getActivityInfo {
  fn: import { getActivityInfo } from "@server/queries.js",
  entities: [Activity]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route NewTripRoute { path: "/newtrip", to: NewTripPage }
page NewTripPage {
  component: import { NewTripPage } from "@client/pages/NewTrip.jsx",
  authRequired: true
}

route ItineraryRoute { path: "/itinerary/:tripId", to: ItineraryPage }
page ItineraryPage {
  component: import { Itinerary } from "@client/pages/Itinerary.jsx",
  authRequired: true
}

route ActivityInfoRoute { path: "/activity/:activityId", to: ActivityInfoPage }
page ActivityInfoPage {
  component: import { ActivityInfo } from "@client/pages/ActivityInfo.jsx",
  authRequired: true
}

route PastTripsRoute { path: "/pasttrips", to: PastTripsPage }
page PastTripsPage {
  component: import { PastTrips } from "@client/pages/PastTrips.jsx",
  authRequired: true
}
